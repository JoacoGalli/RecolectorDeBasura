2023-01-30-mon-week01:

interface de RPI:
  - implementar.
  - la idea es separar conceptualmente la RPI de la FSM.
  - armar un funcion por cada accion que haya que pedirle a la rpi.
  - armar una estructura con todos los datos.
    - esto va de la mano del diseno del thread "lectura de sensores".
  - testear: 
    - cada una de esas funciones, con la rpi y el sensor/motor conectado. (ver juntada sabado 4).
    - importante: aca sí hay que testear fisicamente cada funcion, pq conecta a un disp externo.


concurrencia:
  - diseño:
    - implementar varios threads.
    - contemplar comunicacion entre ellos! esto es muy jodido de hacer!
      - una forma es con variables globales.
      - que la mayor responsabilidad posible la tenga el thread "main".
      el resto, mas bien hacen solo una cosa y listo.

    - cantidad:
      en principio hay 6. 
      1 main (es decir, la FSM)
      2 lectura de camara
      3 lectura de sensores
      4 motor para rotar cinta captacion
      5 motor para rotar cinta distrib
      6 motor para mover cinta distrib

      - aca discutir si no es preferible poner un thread por cada sensor!
      al haber uno solo es mas liviano para la rpi, pero leemos todos al mismo tiempo!


  - tests:
    - testear la concurrencia.
      - especialmente, que ningun thread se queda parado por mucho tiempo seguido, 
      digamos, como maximo unos pocos milli secs. 
      - estaria bueno hacer un profile de esto, para estar seguros.
    - si hay variables globales de control, testear cada caso.
      - esto va a ser tedioso pq son muchas, y muchos if, pero bueno no hay otra.

  - tiempo:
    - determinar tiempos de cada uno.
    - thread de "lectura de sensores": cada 10 segundos?
    - thread de "lectura de camara": cada 60 segundos?


  - thread de "lectura de sensores":
    - disenar como llevar esto adelante. pensar en la concurrencia!
    - una posibilidad, es leer todo, y guardar en un clase en comun, global.
    - importante: determinar si necesitamos mas variables de control, globales.
    quizas, dado un estado, no todas las mediciones son necesrias (o posibles, o con sentido).
    eg, mientras se esta moviendo la cinta de distrib, no tiene sentido medir el llenado del tacho.
      - pensar todos estos casos.
    - importante: decidir si al mismo tiempo que leemos, publicamos a grafana. 
    o si abrimos un thread aparte para ello.

maquina de estados (FSM):
  - determinar con que estrucutra de datos implementarla.
  - programar la logica de cada estado, individualmente.
    - determianr todos los checkeos que cada estado debe hacer, para determinar a que estado pasar.
    - importante: segregar cada estado! al extremo!
    - importante: aca hay que tener resuelto si los datos seran globales o no.
    es decir, a la FSM no le correspone medir, sino solo consultar los datos ya medidos.
    al thread "lectura de sensores" sí le corresponde medir.
    buneo esto hay que discutirlo bien!
  - tests:
    - en cada estado, validar todos los casos posibles.
    - garantizar que cada estado, cambia correctamente, dadas las condiciones requeridas.



cables:
  - que tipo de cables comprar, para cada caso.
  por ejemplo, los motores llevan uno, los datos llevan otro.
  - cuantos comprar.
  - importante: testear el largo. checkear que los sensores soporten al menos 2 metros de largo.
    - hacer cuenta del largo y capacidad!
  - importante: los motores de distribucion se desplazan, contemplar eso con el cable! eg, puente grua.
  - pensar tmb todas las borneras necesarias.


informe:
  - escribir todo lo que sea teorico / introduccion.
  - lo unico que queda afuera son los ensayos, bueno y los temas de diseno q aun no tengamos.
  - aclarar que motores que comparon, compararlos, porque, alternativas, etc.
  desde luego, esto va en paralelo las 4 semanas.

cosas a determinar:
  - cantidad de pines de rpi usados.
  - chequear que la bateria recargue bien. 
  - chequear que la rpi se banque todas las conexiones!
  - ver si no hay que agregar un disipador al micro de la rpi
  - variables electrilcas:
    - chequear V, I, Pot, de cada componente.
    - ver que todos los sensores funcionen bien con 5V.
    - estimar una corriente total, para ver la bateria.


fin de semana (sabado 4): 
  - juntarse y probar, de forma aislada lo siguiente, 
    - los 3 motores
    - todos los sensores
    - los threads/concurrencia

    - importante: aca la idea es probarlo nostros, con la fuente de martin, cada cosa separado, 
    tener una primera version. la semana que sigue, si arrancamos a construir.

    - importante: aca hay 2 niveles a testear, 
      - cada funcion de la interface RPI individualmente (con su sensor conectado)
      - en conjunto con los threads, y con la FSM.



===================================================================================================
2023-02-06-mon-week02:

  camara:
    - investigar si se consigue el cable largo!
    - arreglar el algoritmo para que funcione rapido (menor a 5 segundos)
      - eg, bajar la profundidad de la curva.
      - si bajamos la profunidad de la curva de 12 a 9, testear que funcione.
    - investigar si se consigue el cable largo!
      - FFC, flexible flat cable, 15 pins.
    - esta tarea puede quedar en paralelo hasta el final, pq no nos afecta directamente.


  construccion:
    - empezar a construir.
    - caja para rpi:
      - esta es pequena y va arriba de todo, junto con la camara.
      - conseguir soporte para rpi, con borneras para sacar los cables.
        - puede ser un soporte para toda la rpi, y solo una bornera en los puertos.
        - importante: que pueda salir el cable de la camara!
      - conseguir esta caja, de hecho.
      - chequear con mecanica el tamano y posicion.
      - ver que de alli puedan salir todos los cables!
      - conseguir un cañito para pasar todos los cables.
      - importante: ver como alimentar la rpi, desde la bateria.
    - caja para bateria:
      - esta es grande,
      - esta va debajo de la cinta de captacion.
        - chequear el tamano! y que mecanica asegure que va a entrar luego en la maqueta.
      - agregar una llave hacia fuera de prendido o apagado total, y pensar donde va.
      - componentes: 
        1. bateria.
        2. las 2 fuentes switching.
        3. los 3 drivers (2 TB6600 y 1 A4988).
      - pensar como vamos a conectar todo ello ahi dentro. 
      - evaluar la ventilacion de esta caja, por el tema del calor! (aunque pierda aislacion).
      - A4988: seguramente necesite disipador.
      - TB6600: 
        - ver lo de modo "anodo comun" (hay 3 patas, que van a 5V; y activa por 0s).
        - anguloFinal = 1.8°/micropaso;  eg, 1.8°/4=0.45.
        - si el motor vibra y no gira, hay que invertir la bobina.

    - cables:
      - a los sensores soldarles su cable, directamente. solo queda libre, la parte de bornera.
      - aca recomponer todo el tema de borneras.






===================================================================================================
2023-02-13-mon-week03:

  una vez contruido, ir testeandocada parte. al menos de forma prelimar.
  ir sacando fotos, y videos.

  ideas:
    - camara, con buffer dibujado en el miso.
    - agarrar un tupper, y poner el el ultraonido arriba. llenarlo con papel, y ver que
    cuando llega a un 80%, se frena la rotacion de distribucion, y se empieza a mover hacia atras.
    - testear bien el alcance para la posicion de la cinta de distrib.
    - testear todos los motores y sensores.
    - testear cada sensor con telemetria, ver que todos conectan y reportan.
    - PENSAR:
      - todos los teateos posibles!
      - especialmente para asegurar la captacion y distribucion correcta.




===================================================================================================
2023-02-20-mon-week04:

  esta semana, seguimos todo lo que nos hayamos atrasado.

  aqui hay que tener todo construido, conectado, y testeado individualmente.
